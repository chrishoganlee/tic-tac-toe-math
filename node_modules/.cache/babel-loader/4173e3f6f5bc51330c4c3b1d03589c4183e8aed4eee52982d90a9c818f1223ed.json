{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\tic-tac-toe-math\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport TicTacToeMath from './TicTacToeMath';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Game() {\n  _s();\n  const [game] = useState(new TicTacToeMath());\n  const [board, setBoard] = useState(game.board);\n  const [currentPlayer, setCurrentPlayer] = useState(game.currentPlayer);\n  const [mathQuestion, setMathQuestion] = useState(game.generateMathQuestion());\n  const [answer, setAnswer] = useState('');\n  const [message, setMessage] = useState('');\n  const [timeLeft, setTimeLeft] = useState(10);\n  const timerRef = useRef(null);\n\n  // Add useEffect for timer here\n\n  // Add game logic functions here (e.g., handleCellClick, switchPlayer, etc.)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe Math\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Game, \"8A7Ya3C1ALrVdqKuxGXaRq7cVro=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useRef","TicTacToeMath","jsxDEV","_jsxDEV","Game","_s","game","board","setBoard","currentPlayer","setCurrentPlayer","mathQuestion","setMathQuestion","generateMathQuestion","answer","setAnswer","message","setMessage","timeLeft","setTimeLeft","timerRef","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/projects/tic-tac-toe-math/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport TicTacToeMath from './TicTacToeMath';\n\nfunction Game() {\n  const [game] = useState(new TicTacToeMath());\n  const [board, setBoard] = useState(game.board);\n  const [currentPlayer, setCurrentPlayer] = useState(game.currentPlayer);\n  const [mathQuestion, setMathQuestion] = useState(game.generateMathQuestion());\n  const [answer, setAnswer] = useState('');\n  const [message, setMessage] = useState('');\n  const [timeLeft, setTimeLeft] = useState(10);\n  const timerRef = useRef(null);\n\n  // Add useEffect for timer here\n\n  // Add game logic functions here (e.g., handleCellClick, switchPlayer, etc.)\n\n  return (\n    <div>\n      <h1>Tic Tac Toe Math</h1>\n      {/* Add your game board, math question, timer, etc. here */}\n    </div>\n  );\n}\n\nexport default Game;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,CAAC,GAAGR,QAAQ,CAAC,IAAIG,aAAa,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAACQ,IAAI,CAACC,KAAK,CAAC;EAC9C,MAAM,CAACE,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAACQ,IAAI,CAACG,aAAa,CAAC;EACtE,MAAM,CAACE,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAACQ,IAAI,CAACO,oBAAoB,CAAC,CAAC,CAAC;EAC7E,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMsB,QAAQ,GAAGpB,MAAM,CAAC,IAAI,CAAC;;EAE7B;;EAEA;;EAEA,oBACEG,OAAA;IAAAkB,QAAA,eACElB,OAAA;MAAAkB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEtB,CAAC;AAEV;AAACpB,EAAA,CApBQD,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAsBb,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}